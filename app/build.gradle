apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.yl.myapp"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "HOST_URL", HOST_URL)


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'x86', 'armeabi-v7a','x86_64', 'arm64-v8a'
            universalApk true
        }


    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation project(':picture_library')
    implementation project(':devlib')
    if (!rootProject.ext.isUserModuleApplication){
        implementation project(':userlibrary')
    }
    if (!rootProject.ext.isTripModuleApplication){
        implementation project(':triplibrary')
    }
    implementation 'com.google.code.gson:gson:2.8.5'

    //java注解


    implementation 'org.litepal.android:java:3.0.0'


    implementation rootProject.ext.dependencies["palette"]
    annotationProcessor rootProject.ext.dependencies["router-compiler"]


}
